From 089aa4cf4dc7c59b8093adaedd2ebb5116baab52 Mon Sep 17 00:00:00 2001
From: Kannibal Ox <kannibalox@gmail.com>
Date: Fri, 29 Jul 2022 14:15:12 -0400
Subject: [PATCH] Remove deprecated std::unary/binary_function

---
 include/rpc/command_map.h | 3 +--
 src/core/view.cc          | 5 ++---
 src/rpc/parse_commands.cc | 4 ++--
 3 files changed, 5 insertions(+), 7 deletions(-)

diff --git a/include/rpc/command_map.h b/include/rpc/command_map.h
index 1a6c1e4b..d2f2681b 100644
--- a/include/rpc/command_map.h
+++ b/include/rpc/command_map.h
@@ -14,8 +14,7 @@
 
 namespace rpc {
 
-struct command_map_comp
-  : public std::binary_function<const char*, const char*, bool> {
+struct command_map_comp {
   bool operator()(const char* arg1, const char* arg2) const {
     return std::strcmp(arg1, arg2) < 0;
   }
diff --git a/src/core/view.cc b/src/core/view.cc
index 0c4836af..3f9e5611 100644
--- a/src/core/view.cc
+++ b/src/core/view.cc
@@ -17,8 +17,7 @@
 namespace core {
 
 // Also add focus thingie here?
-struct view_downloads_compare
-  : std::binary_function<Download*, Download*, bool> {
+struct view_downloads_compare {
   view_downloads_compare(const torrent::Object& cmd)
     : m_command(cmd) {}
 
@@ -61,7 +60,7 @@ struct view_downloads_compare
   const torrent::Object& m_command;
 };
 
-struct view_downloads_filter : std::unary_function<Download*, bool> {
+struct view_downloads_filter {
   view_downloads_filter(const torrent::Object& cmd, const torrent::Object& cmd2)
     : m_command(cmd)
     , m_command2(cmd2) {}
diff --git a/src/rpc/parse_commands.cc b/src/rpc/parse_commands.cc
index 2b9a9a29..39730f24 100644
--- a/src/rpc/parse_commands.cc
+++ b/src/rpc/parse_commands.cc
@@ -16,13 +16,13 @@ CommandMap commands;
 RpcManager rpc;
 ExecFile   execFile;
 
-struct command_map_is_space : std::unary_function<char, bool> {
+struct command_map_is_space {
   bool operator()(char c) const {
     return c == ' ' || c == '\t';
   }
 };
 
-struct command_map_is_newline : std::unary_function<char, bool> {
+struct command_map_is_newline {
   bool operator()(char c) const {
     return c == '\n' || c == '\0' || c == ';';
   }
