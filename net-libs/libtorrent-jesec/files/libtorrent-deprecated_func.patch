From 5568744953410c85b876dd036cd57f01a4a57e64 Mon Sep 17 00:00:00 2001
From: kannibalox <kannibalox@gmail.com>
Date: Fri, 29 Jul 2022 14:14:27 -0400
Subject: [PATCH] Remove deprecated std::unary/binary_function

---
 include/net/address_list.h           | 2 +-
 include/torrent/utils/algorithm.h    | 2 +-
 src/download/download_constructor.cc | 4 +---
 src/protocol/request_list.cc         | 3 +--
 src/torrent/peer/peer_list.cc        | 2 +-
 src/torrent/tracker_list.cc          | 3 +--
 6 files changed, 6 insertions(+), 10 deletions(-)

diff --git a/include/net/address_list.h b/include/net/address_list.h
index 92739911..b4245067 100644
--- a/include/net/address_list.h
+++ b/include/net/address_list.h
@@ -26,7 +26,7 @@ class AddressList : public std::list<utils::socket_address> {
 private:
   static utils::socket_address parse_address(const Object& b);
 
-  struct add_address : public std::unary_function<utils::socket_address, void> {
+  struct add_address {
     add_address(AddressList* l)
       : m_list(l) {}
 
diff --git a/include/torrent/utils/algorithm.h b/include/torrent/utils/algorithm.h
index 60e0403c..1ae3efea 100644
--- a/include/torrent/utils/algorithm.h
+++ b/include/torrent/utils/algorithm.h
@@ -88,7 +88,7 @@ advance_backward(_InputIter __first, _InputIter __last, _Distance __distance) {
 }
 
 template<typename _Value>
-struct compare_base : public std::binary_function<_Value, _Value, bool> {
+struct compare_base {
   bool operator()(const _Value& complete, const _Value& base) const {
     return !complete.compare(0, base.size(), base);
   }
diff --git a/src/download/download_constructor.cc b/src/download/download_constructor.cc
index 88dab228..198d4fdb 100644
--- a/src/download/download_constructor.cc
+++ b/src/download/download_constructor.cc
@@ -32,9 +32,7 @@ struct download_constructor_is_multi_path {
   }
 };
 
-struct download_constructor_encoding_match
-  : public std::binary_function<const Path&, const char*, bool> {
-
+struct download_constructor_encoding_match {
   bool operator()(const Path& p, const char* enc) {
     return strcasecmp(p.encoding().c_str(), enc) == 0;
   }
diff --git a/src/protocol/request_list.cc b/src/protocol/request_list.cc
index 1c4a6aaf..dce34087 100644
--- a/src/protocol/request_list.cc
+++ b/src/protocol/request_list.cc
@@ -370,8 +370,7 @@ RequestList::transfer_dissimilar() {
   m_transfer = dummy;
 }
 
-struct equals_reservee
-  : public std::binary_function<BlockTransfer*, uint32_t, bool> {
+struct equals_reservee {
   bool operator()(BlockTransfer* r, uint32_t index) const {
     return r->is_valid() && index == r->index();
   }
diff --git a/src/torrent/peer/peer_list.cc b/src/torrent/peer/peer_list.cc
index 55bccfdb..ff83e119 100644
--- a/src/torrent/peer/peer_list.cc
+++ b/src/torrent/peer/peer_list.cc
@@ -52,7 +52,7 @@ socket_address_less(const sockaddr* s1, const sockaddr* s2) {
 }
 
 struct peer_list_equal_port
-  : public std::binary_function<PeerList::reference, uint16_t, bool> {
+ {
   bool operator()(PeerList::reference p, uint16_t port) {
     return utils::socket_address::cast_from(p.second->socket_address())
              ->port() == port;
diff --git a/src/torrent/tracker_list.cc b/src/torrent/tracker_list.cc
index 81a4d57d..1c1ba323 100644
--- a/src/torrent/tracker_list.cc
+++ b/src/torrent/tracker_list.cc
@@ -46,8 +46,7 @@ TrackerList::has_active_not_scrape_in_group(uint32_t group) const {
 }
 
 // Need a custom predicate because the is_usable function is virtual.
-struct tracker_usable_t
-  : public std::unary_function<TrackerList::value_type, bool> {
+struct tracker_usable_t {
   bool operator()(const TrackerList::value_type& value) const {
     return value->is_usable();
   }
